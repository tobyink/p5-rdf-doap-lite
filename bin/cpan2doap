#!/usr/bin/env perl

use strict;
use warnings;

require Getopt::Long;

my %options = (
	'meta-file'     => 'META.json',
	'changes-file'  => 'Changes',
	'output-file'   => 'doap.rdf',
	'output-format' => 'auto',
);

Getopt::Long::GetOptions(
	\%options,
	'meta-file|m=s',
	'changes-file|c=s',
	'output-file|o=s',
	'output-format=s',
	'help|usage|h',
	'version|V',
);

if ($options{'version'})
{
	printf("cpan2doap (RDF::DOAP::Lite %s)\n", RDF::DOAP::Lite->VERSION);
	exit(0);
}

if ($options{'help'})
{
	print <<"HELP"; exit;
Usage: $0 [options]

Options:

   --meta-file=F,  -m F     Input file name conforming to CPAN::Meta::Spec.
                            Defaults to 'META.json'.
   
   --changes-file=F,  -c F  Input file name conforming to CPAN::Changes::Spec.
                            Defaults to 'Changes'.
   
   --output-file=F,  -o F   File name for output. Defaults to 'doap.rdf'.
   
   --output-format=X        Output format. One of 'xml', 'ttl' or 'auto'.
   
   --help, --usage, -h      Shows this help.
   
   --version, -V            Show version information.

HELP
}

my %attrs;

if (-f $options{'meta-file'})
{
	require CPAN::Meta;
	$attrs{'meta'} = 'CPAN::Meta'->load_file($options{'meta-file'});
}
else
{
	die("Input file $options{'meta-file'} does not exist!\n");
}

if (-f $options{'changes-file'})
{
	if (eval { require CPAN::Changes })
	{
		$attrs{'changes'} = 'CPAN::Changes'->load($options{'changes-file'});
	}
	else
	{
		warn("Changes file cannot be processed without CPAN::Changes.\n");
	}
}
else
{
	warn("Input file $options{'changes-file'} does not exist!\n");
}

require RDF::DOAP::Lite;
my $doap = 'RDF::DOAP::Lite'->new(%attrs);

my $method = 'doap_xml';
if (lc($options{'output-format'}) eq 'ttl')
{
	$method = 'doap_ttl';
}
elsif (lc($options{'output-format'}) eq 'xml')
{
	$method = 'doap_xml';
}
elsif ($options{'output-file'} =~ /\.(ttl|turtle|n3|txt)$/i)
{
	$method = 'doap_ttl';
}

$doap->$method($options{'output-file'});
